/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &mt LEFT_ALT SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        layer_1 {
            bindings = <
&kp TAB    &kp N1        &kp N2      &kp N3        &kp N4        &kp N5        &kp N6    &kp N7    &kp N8    &kp N9     &kp N0             &kp BSPC
&sk LCTRL  &out OUT_TOG  &bt BT_NXT  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &ext_power EP_TOG  &bl BL_TOG
&sk LSHFT  &kp F1        &kp F2      &kp F3        &kp F4        &kp F5        &kp F6    &kp F7    &kp F8    &kp F9     &kp F10            &kp ESCAPE
                                     &kp LGUI      &trans        &kp SPACE     &kp RET   &trans    &kp RALT
            >;
        };

        layer_2 {
            bindings = <
&kp TAB    &kp EXCL   &kp AT      &kp HASH          &kp DLLR         &kp PRCNT       &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&sk LCTRL  &soft_off  &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT       &kp DEL         &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &sk RIGHT_SHIFT
&sk LSHFT  &kp GRAVE  &kp K_BACK  &kp K_FORWARD     &kp PRINTSCREEN  &kp LEFT_ALT    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp ESCAPE
                                  &kp LGUI          &trans           &kp SPACE       &kp RET    &trans     &kp RALT
            >;
        };
    };
};

